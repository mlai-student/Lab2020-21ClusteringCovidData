#PA -> short for Possible Allocations -> which values can be set on the variables

[data_generating_settings]
generate_automatic = no
generated_folder_name = linear_classifier
generated_folder_path = test
generated_data_path = test
generated_model_path = test
#used paths -> set during run

test_country_share = 0.2
#PA [0,1)

complete_cluster = yes
#PA yes, no

examples_snippet_length = 30
#nr days per snippet -> PA: Whole positive number

examples_no_snippets = 30
#nr random snippets (max) created of a country

divide_by_country_population = ["no"]
#should the data be divided by country population TODO -> gets not inverted -> PA yes, no


do_smoothing = ["yes", "no"]
nr_days_for_avg = [3, 7]
#do 1D convolution restricted to nr_days_for_avg smoothing

do_data_augmentation = ["no"]
percent_varianz = [0.0]
#Do data augmentation ? -> add more snippets with random variated data points

add_additional_info = [["Population", "data/ecdc_df"]]
#Ability to add additional data to each snippet e.g. how high the population is -> Stopped

[model_training_settings]
#generic data path
data_path = data/Dec-12-2020/
models = ["KMeans", "KMedoids"]
#cluster model -> PA: ["KMeans","DBSCAN","TS_KShape","KMedoids"]


metric = ["euclidean"]
#metric used for clustering -> PA ["euclidean", "dtw"]
#not all combinations possible (wont abort)

n_clusters = [10, 15, 20]
#nr clusters used -> PA whole positive number

[model_prediction_settings]
forecast_evaluation_function = ["avg_perc_dist"]

forecast_function = ["lstm_forecast_cluster", "lstm_forecast"]
#PA: ["lstm_forecast_cluster", "lstm_forecast", "naive_forecast", "seasonal_naive_forecast", "cluster_avg_forecast", "cluster_naive_forecast", "cluster_seasonal_naive_forecast"]
